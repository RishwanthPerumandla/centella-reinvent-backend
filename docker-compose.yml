version: "3.8"

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: reinventdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d reinventdb"]
      interval: 10s
      retries: 5
      timeout: 5s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PROJECT_DIR=/app/projects   # ✅ Add this
    volumes:
      - ./src:/app/src
      - ./reinvent:/app/reinvent
      - ./projects:/app/projects    # ✅ Make sure this line exists
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    image: reinvent:latest
    env_file:
      - .env
    command: ["celery", "-A", "src.tasks.celery_worker", "worker", "--loglevel=debug", "--queues=molecule,tl"]
    privileged: true  # ✅ Allows Celery worker to run Docker commands
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./reinvent:/app/reinvent  # ✅ Ensure Celery can write configs/results
      - ./reinvent/configs:/app/reinvent/configs  # ✅ Ensures REINVENT sees the configs
      - ./projects:/app/projects    # ✅ Ensure it's mounted
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  reinvent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: centella-reinvent-backend-reinvent
    volumes:
      - ./projects:/app/projects         # Project-specific runs and models
      - ./reinvent:/app/reinvent         # Optional: Mount REINVENT code if you want to edit from host
      - ./reinvent/tasks:/app/reinvent/tasks  # Optional: Mount REINVENT task scripts separately if needed
    tty: true
    command: sleep infinity              # Keeps container running after startup
